import streamlit as st
import pandas as pd
import numpy as np
#@st.cache_data
def show_page():
    def load_data():
        df = pd.read_csv("data.csv")
        return df
    
    df = load_data()
    
    
    # --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
    st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ –≤—ã–∂–∏–≤–∞–µ–º–æ—Å—Ç–∏ –ø–æ –∫–ª–∞—Å—Å—É", layout="centered")
    
    # --- –ó–∞–≥–æ–ª–æ–≤–æ–∫ ---
    st.title("üßÆ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∂–∏–≤—à–∏—Ö –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –∏ –∫–ª–∞—Å—Å—É –±–∏–ª–µ—Ç–∞")
    st.markdown("""
        –í—ã–±–µ—Ä–∏—Ç–µ **–∫–ª–∞—Å—Å –±–∏–ª–µ—Ç–∞**, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∂–∏–≤—à–∏—Ö —Å—Ä–µ–¥–∏:
        - **–ú–æ–ª–æ–¥—ã—Ö –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤** (–≤–æ–∑—Ä–∞—Å—Ç < 30 –ª–µ—Ç)
        - **–ü–æ–∂–∏–ª—ã—Ö –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤** (–≤–æ–∑—Ä–∞—Å—Ç > 60 –ª–µ—Ç)
    """)
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –≤–æ–∑—Ä–∞—Å—Ç–∞
    df = df.dropna(subset=['Age'])
    
    
    st.image(
        "https://upload.wikimedia.org/wikipedia/commons/f/fd/RMS_Titanic_3.jpg",
        caption="RMS Titanic",
        use_column_width=True
    )
    
    
    pclass = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –±–∏–ª–µ—Ç–∞:",
        options=[1, 2, 3],
        format_func=lambda x: f"{x}-–π –∫–ª–∞—Å—Å"
    )
    
    
    df_class = df[df['Pclass'] == pclass]
    
    
    young = df_class[df_class['Age'] < 30]
    old = df_class[df_class['Age'] > 60]
    
    
    def survival_rate(group):
        if len(group) == 0:
            return 0.0, 0
        rate = (group['Survived'].sum() / len(group)) * 100
        return round(rate, 2), len(group)
    
    young_rate, young_count = survival_rate(young)
    old_rate, old_count = survival_rate(old)
    
    
    st.subheader(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è {pclass}-–≥–æ –∫–ª–∞—Å—Å–∞")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.metric(
            label="–ú–æ–ª–æ–¥—ã–µ (<30)",
            value=f"{young_rate}%",
            delta=f"–≤—ã–∂–∏–≤—à–∏—Ö –∏–∑ {young_count} –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤"
        )
    
    with col2:
        st.metric(
            label="–°—Ç–∞—Ä—ã–µ (>60)",
            value=f"{old_rate}%",
            delta=f"–≤—ã–∂–∏–≤—à–∏—Ö –∏–∑ {old_count} –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤"
        )
    
    
    details = pd.DataFrame({
        '–ì—Ä—É–ø–ø–∞': ['–ú–æ–ª–æ–¥—ã–µ (<30)', '–°—Ç–∞—Ä—ã–µ (>60)'],
        '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ': [young_count, old_count],
        '–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∂–∏–≤—à–∏—Ö (%)': [young_rate, old_rate]
    })
    
    st.dataframe(details.style.format({
        '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ': '{:,.0f}',
        '–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∂–∏–≤—à–∏—Ö (%)': '{:.2f}%'
    }).apply(lambda x: ['background-color: #f0f8ff' if x.name % 2 == 0 else 'background-color: #ffffff' for _ in x], axis=1))


